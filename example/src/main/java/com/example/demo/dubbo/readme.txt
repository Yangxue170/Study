dubbo：了解此内容之前，需要先了解下什么是 RPC-远程过程调用，主要是跟本地调用区分开。
1、如何设计一个RPC框架
    服务消费者
    注册中心
    服务提供者
    监控运维（还需要一些容错机制等）

dubbo：https://www.cnblogs.com/aobing/p/13800058.html
理解：为什么会出现dubbo，即其要解决的问题，当服务比较多，服务之间的调用就会很复杂，服务间的依赖关系也比较复杂。
        ① 当服务越来越多时，服务 URL 配置管理变得非常困难，F5 硬件负载均衡器的单点压力也越来越大。
        ② 当进一步发展，服务间依赖关系变得错踪复杂，甚至分不清哪个应用要在哪个应用之前启动，架构师都不能完整的描述应用的架构关系。
        ③ 接着，服务的调用量越来越大，服务的容量问题就暴露出来，这个服务需要多少机器支撑？什么时候该加机器？
因此出现了dubbo，服务自动注册、自动发现等高效服务治理方案。（负载均衡）

2、RPC 远程过程调用，是分布式服务的必然趋势
  简单描述：A、B两个服务器架起一个网络链接，进行数据通信。
  ⚠️：发送的数据需要进行序列化，接收到的数据需要进行反序列化。





interview：
https://juejin.cn/post/6882522177485144072